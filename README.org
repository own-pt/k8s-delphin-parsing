#+Title: k8s-batch-parser

* Create a k8 cluster at IBM Cloud
Follow LINK

* Creating a Cloud Object Storage instance

Follow https://cloud.ibm.com/docs/containers?topic=containers-object_storage

* Commands 

#+BEGIN_SRC bash

  $ ibmcloud login -a cloud.ibm.com -r us-south -g Default --sso

  $ ibmcloud ks cluster-config --cluster <cluster_name>

  $ ibmcloud resource service-instance <service_name>  | grep GUID

  $ kubectl create secret generic cos-write-access --type=ibm/ibmc-s3fs --from-literal=api-key=<api_key> --from-literal=service-instance-id=<service_instance_guid>

  $ kubectl create serviceaccount tiller -n kube-system

  $ kubectl create clusterrolebinding tiller --clusterrole=cluster-admin --serviceaccount=kube-system:tiller -n kube-system

  $ kubectl get serviceaccount -n kube-system tiller

  $ helm init --service-account tiller

  $ kubectl get pods -n kube-system -l app=helm

  $ helm repo add iks-charts https://icr.io/helm/iks-charts

  $ helm repo update

  $ helm fetch --untar iks-charts/ibm-object-storage-plugin

  $ helm plugin install ./ibm-object-storage-plugin/helm-ibmc

  $ chmod 755 ~/.helm/plugins/helm-ibmc/ibmc.sh
  
  $ helm ibmc --help

  $ helm ibmc install iks-charts/ibm-object-storage-plugin --name ibm-object-storage-plugin

  # edit pvc.yaml
  
  $ kubectl apply -f pvc.yaml

  $ ibmcloud cr namespace-add test-parser

  $ ibmcloud cr login

  $ docker build -t base-worker .

  $ cd init/

  $ docker build -f Dockerfile.init -t  us.icr.io/<my_namespace>/init:<my_tag> .

  $ docker push us.icr.io/<my_namespace>/init:<my_tag>
  
  $ cd ../parser/

  $ docker build -f Dockerfile.worker.parser -t us.icr.io/<my_namespace>/parser-worker:<my_tag> .

  $ docker push us.icr.io/<my_namespace>/parser-worker:<my_tag>
  
  $ cd ../out/
  
  $ docker build -f Dockerfile.worker.out -t us.icr.io/<my_namespace>/output-worker:<my_tag> .

  $ docker push us.icr.io/<my_namespace>/output-worker:<my_tag>

  $ cd ..

  $ ibmcloud ks cluster-pull-secret-apply --cluster <cluster_name>

  $ kubectl create namespace test-parser

  $ ibmcloud iam service-id-create <cluster_name>-<kube_namespace>-id --description "Service ID for IBM Cloud Container Registry in Kubernetes cluster <cluster_name> namespace <kube_namespace>"

  $ ibmcloud iam service-policy-create <cluster_service_ID> --roles <service_access_role> --service-name container-registry [--region <IAM_region>] [--resource-type namespace --resource <registry_namespace>]

  $ ibmcloud iam service-api-key-create <cluster_name>-<kube_namespace>-key <cluster_name>-<kube_namespace>-id --description "API key for service ID <service_id> in Kubernetes cluster <cluster_name> namespace <kube_namespace>"

  $ kubectl --namespace <kubernetes_namespace> create secret docker-registry <secret_name> --docker-server=<registry_URL> --docker-username=iamapikey --docker-password=<api_key_value> --docker-email=<docker_email>

  # edit pipeline.yml
  
  $ kubectl create -f pipeline.yml 
  
#+END_SRC

