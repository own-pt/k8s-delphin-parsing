# #REDIS
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: redis
    role: master
    tier: backend
  name: redis-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis
        name: redis-master
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
  name: redis-master
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: redis
---
# INIT ENQUEUE JOB
apiVersion: batch/v1
kind: Job
metadata:
  name: init-enqueue
spec:
  backoffLimit: 1
  template:
    spec:
      containers:
        - image: {{ .Values.images.init }}
          name: enqueue
          imagePullPolicy: Always
          env:
          - name: INPUT_DIR
            value: "/root/data/"
          volumeMounts:
          - name: data
            mountPath: /root/data/
      restartPolicy: Never
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: inpvc
---
# PARSER WORKERS
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    role: worker
  name: parser-worker
spec:
  replicas: {{ .Values.ace.replicas }}
  template:
    metadata:
      labels:
        role: worker
    spec:
      containers:
        - image: {{ .Values.images.parser }}
          imagePullPolicy: Always
          name: parser
          env:
          - name:  ACE_ARGS
            value: "{{ .Values.ace.options }}"
          - name: OUTPUT_DIR
            value:  "/root/data/"
          volumeMounts:
          - name: data
            mountPath: /root/data/
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: outpvc
